enum DoorType {
    Numbered
    Direction
    House
}

enum ReportType {
    Closed
    Abusive
    Mistake
}

role Admin {
    emails {
        "andrew@keel.xyz"
    }
}

job AddBuildingByKommuneKode {
    inputs {
        kommunekode Number
    }

    @permission(roles: [Admin])
}

model Building {
    fields {
        street Text
        number Number
        post Number
        doors DoorType
        code Text?
        note Text?
    }

    actions {
        get getBuilding(id)
        list listBuilding()
        delete deleteBuilding(id)
        create createBuilding() with (street, number, doors, code?, post, note?) {
            @permission(expression: ctx.isAuthenticated)
        }
        update updateBuilding(id) with (doors?, code?, note?)
        // create generateFromCsv() with (street, number, doors, code?, note?) {
        //     @permission(expression: ctx.isAuthenticated)
        //     @function
        // }
    }

    @permission(
        actions: [get, list, update, delete],
        expression: ctx.isAuthenticated
    )
}

model Spot {
    fields {
        building Building
        floor Number?
        door Number?
        active Boolean @default(false)
        note Text?
        host User?
        report Report[]
    }

    actions {
        get getSpot(id)
        list listSpot()
        delete deleteSpot(id)
        create createSpot() with (building.id, floor?, door?, active, note?, host.id?) {
            @permission(expression: ctx.isAuthenticated)
            // @set(spot.host.id = host.id ? host.id : ctx.identity.id)
        }
        update updateSpot(id) with (active?, note?)
    }

    @permission(
        actions: [get, list, update, delete],
        expression: ctx.isAuthenticated
    )
}

model User {
    fields {
        identity Identity
        group Number @default(2)
    }
}

model Report {
    fields {
        reporter User
        target Spot
        note Text
        type ReportType
    }
}

model Message {
    fields {
        note Text
        sender User
        target Spot?
        recieve User
        spot Building
    }
}

model Announce {
    fields {
        note Text
        post Timestamp?
        spot Building
    }
}
